#!/bin/bash

set -o pipefail
export PATH=/bin

case "$1" in
  repair | start | "")
    hostname initramfs

    mount -m -t devtmpfs -o mode=0755,noexec devtmpfs /dev
    mount -m -t devpts -o newinstance,noexec,ptmxmode=0666 devpts /dev/pts
    mount -m -t proc -o nodev,noexec proc /proc
    mount -m -t sysfs -o nodev,noexec sysfs /sys

    ln -f -n -s pts/ptmx /dev/ptmx
    ln -f -n -s /proc/self/fd /dev/fd
    ln -f -n -s fd/0 /dev/stdin
    ln -f -n -s fd/1 /dev/stdout
    ln -f -n -s fd/2 /dev/stderr

    if [[ $1 != repair ]]; then
      declare -A CONSOLE=()

      while read TTY _; do
        read -p 'Press Enter for maintenance: ' -s -t 2 <>/dev/$TTY 2>&0 &
        CONSOLE[$!]=$TTY
      done < /proc/consoles

      while true; do
        if wait -n -p PID; then
          kill -INT 0
        elif test -v PID; then
          unset "CONSOLE[$PID]"
        else
          break
        fi
      done

      if [[ ${#CONSOLE[@]} -eq 0 ]]; then
        while read TTY _; do
          echo no >/dev/$TTY
        done < /proc/consoles

        lvm vgchange -a y --sysinit >/dev/null 2>&1
        if set -- /dev/*/root && [[ $# -eq 1 ]]; then
          if mount -m -r "$1" /root && cd /root; then
            if [[ ! -x etc/init ]]; then
              echo 'Root filesystem is missing /etc/init'
            elif [[ ! -d tmp ]]; then
              echo 'Root filesystem is missing /tmp'
            elif mount --bind / tmp && mount --move . /; then
              umount -l /dev /sys /proc
              exec chroot . /etc/init
            fi
          else
            echo 'Failed to mount root filesystem'
          fi
        elif [[ $# -gt 1 ]]; then
          echo 'Found multiple root filesystems'
        else
          echo 'Failed to find root filesystem'
        fi
      else
        while read TTY _; do
          echo yes >/dev/$TTY
        done < /proc/consoles
      fi
    fi

    dmesg --console-off
    while read TTY _; do
      TERM=vt102 setsid -c -f bash -l <>/dev/$TTY 1>&0 2>&1
    done < /proc/consoles

    ctrlaltdel soft
    exec "$0" reap
    ;;

  stop)
    sleep 1 && kill -TERM -1
    sleep 1 && kill -KILL -1
    echo && dmesg --console-on

    if swapoff -a && umount -a -r -t norootfs; then
      echo "Remounted filesystems read-only"
    elif sync; then
      echo "Flushed filesystem writes"
    fi

    exec stop "${@:2}"
    ;;

  *)
    trap 'exec "$0" reap 3>&-' HUP
    trap 'exec "$0" stop reboot 3>&-' INT
    trap 'exec "$0" stop poweroff 3>&-' TERM
    exec 3<><(:) && while true; do read -u 3; done
    ;;
esac
